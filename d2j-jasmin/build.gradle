configurations {
  antlr2java
}
dependencies {
  compile(group: 'org.antlr', name: 'antlr-runtime', version:'3.5.2') {
        exclude(module: 'stringtemplate')
  }
  compile "org.ow2.asm:asm-debug-all:5.0.3"
  antlr2java "org.antlr:antlr:3.5.2"
  provided project(':d2j-base-cmd')
}

task antlr2java(type: JavaExec) {
    classpath=configurations.antlr2java
    def source='src/main/antlr3'
    def grammars = fileTree(source).include('**/*.g')
    ext.antlrJava="$buildDir/generated-sources/antlr"
    def antlrDir="$buildDir/generated-sources/antlr/com/googlecode/d2j/jasmin"
    inputs.dir file(source)
    outputs.dir file(ext.antlrJava)
    main='org.antlr.Tool'
    args=['-o', "$antlrDir",grammars.files].flatten()
}
compileJava{
    dependsOn antlr2java
    source antlr2java.antlrJava
}

